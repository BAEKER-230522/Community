plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.baeker'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

ext {
	set('springCloudVersion', "2022.0.2")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// base
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation
	implementation 'org.springframework.boot:spring-boot-starter-web' // web
	annotationProcessor 'org.projectlombok:lombok' // Lombok
	compileOnly 'org.projectlombok:lombok' // Lombok

	// 민감정보 암호화
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// cloud watch
	implementation'ca.pjer:logback-awslogs-appender:1.6.0'

	// spring doc open api
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// Database
	runtimeOnly 'com.h2database:h2' // Test DB
	runtimeOnly 'com.mysql:mysql-connector-j' // Dev DB

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// feign
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:3.11.2' // mockito
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty "jasypt.encryptor.password", project.getProperty("jasypt.encryptor.password")
}

jar{
	enabled = false
}

clean {
	delete file('src/main/generated')
}